<Window x:Class="EvadeWPF.GameWindow"
        x:Name="MainGameWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ctr="clr-namespace:EvadeWPF.Controls"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="EvadeWPF" Height="700" Width="850"
        Padding="10">
    <Border Background="Bisque">
        <Grid x:Name="MainGrid" Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.05*"/>
                <RowDefinition Height="0.85*"/>
                <RowDefinition Height="0.15*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="BoardGridUnit" Width="Auto"/>
                <ColumnDefinition Width="0.3*"/>
            </Grid.ColumnDefinitions>
            <Menu VerticalAlignment="Top" Height="30"
                  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                <MenuItem Header="Game">
                    <MenuItem Header="NewGame" Command="{Binding NewGameCommand}"/>
                    <MenuItem Header="SaveGame" Command="{Binding SaveGameCommand}"/>
                    <MenuItem Header="LoadGame" Command="{Binding LoadGameCommand}"/>
                </MenuItem>
                <MenuItem Header="AI">
                    <MenuItem Header="WhitePlayer" IsCheckable="True"
                              IsChecked="{Binding IsWhitePlayerAI, Mode=TwoWay}"/>
                    <MenuItem Header="BlackPlayer" IsCheckable="True"
                              IsChecked="{Binding IsBlackPlayerAI, Mode=TwoWay}"/>
                </MenuItem>
                <MenuItem Header="Difficulty">
                    <MenuItem Header="WhitePlayer" 
                              ItemContainerStyle="{StaticResource MenuItemRadioContainerStyle}">
                        <MenuItem Header="Random" IsCheckable="True"
                                  Style="{StaticResource MenuItemRadio}"
                                  IsChecked="{Binding IsWhiteDifficultyRandom, Mode=TwoWay}"/>
                        <MenuItem Header="Dumb" IsCheckable="True"
                                  Style="{StaticResource MenuItemRadio}"
                                  IsChecked="{Binding IsWhiteDifficultyDumb, Mode=TwoWay}"/>
                        <MenuItem Header="Smart" IsCheckable="True"
                                  Style="{StaticResource MenuItemRadio}"
                                  IsChecked="{Binding IsWhiteDifficultySmart, Mode=TwoWay}"/>
                    </MenuItem>
                    <MenuItem Header="BlackPlayer"
                              ItemContainerStyle="{StaticResource MenuItemRadioContainerStyle}">
                        <MenuItem 
                            Style="{StaticResource MenuItemRadio}"
                            IsCheckable="True"
                            Header="Random"
                            IsChecked="{Binding IsBlackDifficultyRandom, Mode=TwoWay}"/>
                        <MenuItem 
                            Style="{StaticResource MenuItemRadio}"
                            IsCheckable="True"
                            Header="Dumb"
                            IsChecked="{Binding IsBlackDifficultyDumb, Mode=TwoWay}"/>
                        <MenuItem 
                            Style="{StaticResource MenuItemRadio}"
                            IsCheckable="True"
                            Header="Smart"
                            IsChecked="{Binding IsBlackDifficultySmart, Mode=TwoWay}"/>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Undo" Command="{Binding UndoMoveCommand}"/>
                <MenuItem Header="Redo" Command="{Binding RedoMoveCommand}"/>
                <MenuItem Header="Best Move" Command="{Binding PlayBestMoveCommand}"/>
                <MenuItem Header="Help">
                    <MenuItem Header="Rules"/>
                </MenuItem>

            </Menu>
            <Grid Margin="10,0,0,0"
                  Grid.Column="0" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.15*"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ctr:LoadingPanel Grid.Row="0" x:Name="loadingPanel"
                                  HorizontalAlignment="Center" VerticalAlignment="Top"
                                  HorizontalContentAlignment="Center" VerticalContentAlignment="Top"
                                  IsLoading="{Binding IsPanelLoading}"/>

                <ListBox Name="BoardListBox"
                         Grid.Row="1"
                         HorizontalAlignment="Center" VerticalAlignment="Center"
                         HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                         ItemsSource="{Binding BoardItems}"
                         ItemTemplate="{StaticResource BoardTemplate}"
                         ItemContainerStyle="{StaticResource BoardPieceContainerStyle}"
                         SelectedItem="{Binding SelectedBoardItem, Mode=OneWayToSource}"
                         ItemsPanel="{StaticResource BoardBackgroundTemplate}"
                         RenderTransformOrigin="0.5,0.5"
                         IsEnabled="{Binding IsListBoxEnabled, Mode=OneWay}">
                </ListBox>
            </Grid>
            <StackPanel Orientation="Vertical"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Grid.Row="2" Grid.Column="0">
                <Label Margin="0,0,0,0" Content="{Binding TurnCounterLabel}"
                       HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Button FontFamily="Marlett" FontSize="20" Content="3"
                            Command="{Binding UndoMoveCommand}"
                            IsEnabled="{Binding IsUndoButtonEnabled}"/>
                    <Button Content="Best move"
                            Margin="10,0,0,0"
                            Command="{Binding PlayBestMoveCommand}"
                            IsEnabled="{Binding IsListBoxEnabled}"/>
                    <Button FontFamily="Marlett" FontSize="20" Content="4"
                            Margin="10,0,0,0"
                            Command="{Binding RedoMoveCommand}"
                            IsEnabled="{Binding IsRedoButtonEnabled}"/>
                </StackPanel>
                <Label Margin ="0,0,0,0" Content="{Binding PlayerOnTurn}"
                       HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
            </StackPanel>
            <Grid Grid.Column="1" Grid.Row="1" Margin="10,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.1*"/>
                    <RowDefinition Height="0.4*"/>
                    <RowDefinition Height="0.1*"/>
                    <RowDefinition Height="0.4*"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0"
                       Content="Move History:"/>
                <ScrollViewer VerticalContentAlignment="Bottom"
                              Grid.Row="1">
                    <ListView x:Name="listView" ItemsSource="{Binding MyList}">
                    </ListView>
                </ScrollViewer>
                <Label Grid.Row="2"
                       Content ="Output Log"/>
                <ScrollViewer Name="LogScroll" Grid.Row="3">
                    <TextBox x:Name="LogTextBox" Margin="10,0,10,10" 
                               Text="{Binding OutputLogTextBox}" Background="BurlyWood"
                               TextWrapping="Wrap">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:CallMethodAction 
                                    MethodName="ScrollToEnd" 
                                    TargetObject="{Binding ElementName=LogScroll}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Border>
</Window>
